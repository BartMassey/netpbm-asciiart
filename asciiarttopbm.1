.TH ASCIIARTTOPBM 1 "27 November 2010"
.SH NAME
asciiarttopbm \- convert ASCII art to PBM
.SH SYNOPSIS
.B asciiarttopbm
.RI [ options... ]
.RI [ filename ]
.SH DESCRIPTION
.PP
\fBasciiarttopbm\fP takes "ASCII art" and converts
it to \fInetpbm\fP PBM format, expanding it in the
process into a rectangular "output cell" per character,
which is shaded using halftoning techniques.
.SH USAGE
.PP
Options are as follows:
.TP
.BI "-cwidth " pixels
Gives the pixel-width of the graphical output cell corresponding
to a given input character.
.TP
.BI "-cheight " pixels
Gives the pixel-height of the graphical output cell corresponding
to a given input character.
.TP
.BI "-contrast " scale
Sets the contrast of the output image according to the given
\fIscale\fP factor, which should be between 0 and 1.
.TP
.BI "-mesh " scale
Sets the mesh screen depth of the output image according to the given
\fIscale\fP factor, which should be between 0 and 1.  A
primitive mesh screen is applied to the image in an attempt
to get better bitmap halftones.
.TP
.B "-nofilter"
If the cell width or cell height is greater than 2, by
default a primitive triangular anti-aliasing filter
(corresponding to bilinear shading) is applied. This flag
stops that from happening, shading the entire cell with the
gray value corresponding to the input character for that
cell.
.TP
.BI "-scale " string
The given \fIstring\fP is treated as a list of ASCII
characters by increasing black density.  The output gray
level for an input character will be determined by the
position of the character in this list.  Characters not in
the list will be treated as black.  The space character is
always white, and should be omitted.
.IP
When neither \fB-scale\fP or \fB-tonescale\fP are given, the
output gray level will be determined directly by the
measured proportional density of the input character. See
the \fB-font\fP flag to select which font information will
be used in this calculation.
.TP
.B "-tonescale"
Like \fB-scale\fP, except that a default scale will be
constructed by sorting the glyphs according to character
density taken from font information.
.TP
.BI "-font " tag
The given font \fI"tag"\fP is used to determine which
built-in scale or shading to use.  Available font tags as of
this writing are "sans", which corresponds to \fIBitstream
Vera Sans Mono\fP, and "typewriter", which corresponds to
\fICourier New\fP. The default is "sans".
.IP
Different fonts have different character densities, so this
argument may be useful in dealing with ASCII art that was
produced with a particular font in mind.
.SH NOTES
.PP
The functionality of this program is largely a matter of
convenience.  For better quality, it is probably best to use
\fBasciiarttopgm\fP and postprocess the result using
\fInetpbm\fP.
.PP
The output cells of the bitmap are produced by a bilinear
shader.  This does an OK job, but it could definitely be
improved.
.PP
The font tones have been measured automatically by rendering
characters. Character patterning is in no way taken into
account in this process.
.PP
It would be nice to include a dot-matrix font tag for the
old ASCII art that might expect it.
.SH AUTHOR
Bart Massey <bart@cs.pdx.edu>
.SH "SEE ALSO"
.BR asciiarttopgm (1),
.BR pgmtoasciiart (1),
.BR mkasciiart (1),
.BR netpbm (1),
.BR pbm (5)
